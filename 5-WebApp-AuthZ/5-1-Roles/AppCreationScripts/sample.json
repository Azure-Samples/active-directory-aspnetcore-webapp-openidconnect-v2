{
  "Sample": {
    "Title": "Add authorization using app roles & roles claims to an ASP.NET Core Web app that signs-in users with the Microsoft identity platform",
    "Level": 300,
    "Client": "ASP.NET Core Web App",
    "Service": "Microsoft Graph",
    "RepositoryUrl": "microsoft-identity-platform-aspnetcore-webapp-tutorial",
    "Endpoint": "AAD v2.0"
  },

  /*
    This section describes the Azure AD Applications to configure, and their dependencies
  */
  "AADApps": [
    {
      "Id": "webApp",
      "Name": "WebApp-RolesClaims",
      "Kind": "WebApp",
      "Audience": "AzureADMyOrg",
      "HomePage": "https://localhost:44321/",
      "ReplyUrls": "https://localhost:44321/, https://localhost:44321/signin-oidc",
      "LogoutUrl": "https://localhost:44321/signout-oidc",
      "PasswordCredentials": "Auto",
      "AppRoles": [
        {
          "Types" :  ["User"],
          "Name" : "UserReaders",
          "Description" : "User readers can read basic profiles of all users in the directory."
        },
        {
          "Types" :  ["User"],
          "Name" : "DirectoryViewers",
          "Description" : "Directory viewers can view objects in the whole directory."
        }
      ],
      "RequiredResourcesAccess": [
        {
          "Resource": "Microsoft Graph",
          "DelegatedPermissions": [ "User.Read", "User.ReadBasic.All" ]
        }
      ],"ManualSteps": [
        { "Comment": "You can run the ..\\CreateUsersAndAssignRoles.ps1 command to automatically create a number of users, and assign users to these roles or assign users to this application app roles using the portal.To receive the `roles` claim with the name of the app roles this user is assigned to, make sure that the user accounts you plan to sign-in to this app is assigned to the app roles of this app. The guide, https://docs.microsoft.com/azure/active-directory/manage-apps/assign-user-or-group-access-portal#assign-a-user-to-an-app---portal provides step by step instructions." }

      ]
    }
  ],

  /*
    This section describes how to update the code in configuration files from the apps coordinates, once the apps
    are created in Azure AD.
    Each section describes a configuration file, for one of the apps, it's type (XML, JSon, plain text), its location
    with respect to the root of the sample, and the mappping (which string in the config file is mapped to which value
  */
  "CodeConfiguration": [
    {
      "App": "webApp",
      "SettingKind": "JSon",
      "SettingFile": "\\..\\appsettings.json",
      "Mappings": [
        {
          "key": "ClientId",
          "value": ".AppId"
        },
        {
          "key": "TenantId",
          "value": "$tenantId"
        },
        {
          "key": "Domain",
          "value": "$tenantName"
        },
        {
          "key": "ClientSecret",
          "value": ".AppKey"
        }
      ]
    }
  ]
}
