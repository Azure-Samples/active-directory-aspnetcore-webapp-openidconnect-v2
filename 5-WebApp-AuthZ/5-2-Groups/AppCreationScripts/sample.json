{
  "Sample": {
    "Title": "Add authorization using groups & group claims to an ASP.NET Core Web app that signs-in users with the Microsoft identity platform",
    "Level": 300,
    "Client": "ASP.NET Core Web App",
    "Service": "Microsoft Graph",
    "RepositoryUrl": "microsoft-identity-platform-aspnetcore-webapp-tutorial",
    "Endpoint": "AAD v2.0"
  },

  /*
    This section describes the Azure AD Applications to configure, and their dependencies
  */
  "AADApps": [
    {
      "Id": "webApp",
      "Name": "WebApp-GroupClaims",
      "Kind": "WebApp",
      "Audience": "AzureADMyOrg",
      "HomePage": "https://localhost:44321/",
      "ReplyUrls": "https://localhost:44321/, https://localhost:44321/signin-oidc",
      "LogoutUrl": "https://localhost:44321/signout-oidc",
      "PasswordCredentials": "Auto",
      "GroupMembershipClaims": "SecurityGroup",
      "RequiredResourcesAccess": [
        {
          "Resource": "Microsoft Graph",
          "DelegatedPermissions": [ "User.Read", "GroupMember.Read.All" ]
        }
      ],
      "ManualSteps": [
        {
          "Comment": "Navigate to the API Permissions page and select 'Grant admin consent for (your tenant)'"
        },
        {
          "Comment": "On Azure Portal, create a security group named GroupAdmin, assign some users to it, and configure your ID and Access token to emit GroupID in your app registration. Configure the value for 'GroupAdmin' key in appsettings.json."
        },
        {
          "Comment": "On Azure Portal, create a security group named GroupMember, assign some users to it, and configure your ID and Access token to emit GroupID in your app registration. Configure the value for 'GroupMember' key in appsettings.json."
        }
      ]
    }
  ],

  /*
    This section describes how to update the code in configuration files from the apps coordinates, once the apps
    are created in Azure AD.
    Each section describes a configuration file, for one of the apps, it's type (XML, JSon, plain text), its location
    with respect to the root of the sample, and the mappping (which string in the config file is mapped to which value
  */
  "CodeConfiguration": [
    {
      "App": "webApp",
      "SettingKind": "JSON",
      "SettingFile": "\\..\\appsettings.json",
      "Mappings": [
        {
          "key": "ClientId",
          "value": ".AppId"
        },
        {
          "key": "TenantId",
          "value": "$tenantId"
        },
        {
          "key": "Domain",
          "value": "$tenantName"
        },
        {
          "key": "ClientSecret",
          "value": ".AppKey"
        }
      ]
    }
  ]
}